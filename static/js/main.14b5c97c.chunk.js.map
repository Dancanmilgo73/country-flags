{"version":3,"sources":["Home/Nav.js","Home/Select.js","Home/InputField.js","Home/PageInputs.js","Home/Country.js","Home/Countries.js","Home/Home.js","Details/Details.js","themes.js","App.js","reportWebVitals.js","index.js"],"names":["Nav","updateTheme","theme","useState","mode","setMode","className","onClick","Select","updateRegion","onChange","e","target","value","defaultValue","InputField","updateSearch","inputVal","setInputVal","onSubmit","preventDefault","document","getElementById","reset","id","placeholder","type","PageInputs","Country","country","to","name","style","color","textDecoration","src","flag","alt","population","region","capital","Countries","countries","query","length","filter","toLowerCase","includes","console","log","map","Home","Details","countryName","useParams","nativeName","subregion","alpha2Code","currencies","currency","languages","language","borders","lightTheme","body","fontColor","darkTheme","GlobalStyles","createGlobalStyle","props","StyledApp","styled","div","App","countryList","setCountryList","setQuery","setRegion","setTheme","getCountries","endpoint","a","fetch","res","json","useEffect","str","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"oQAEe,SAASA,EAAT,GAAsC,IAAvBC,EAAsB,EAAtBA,YAAaC,EAAS,EAATA,MACzC,EAAwBC,mBAAS,QAAjC,mBAAOC,EAAP,KAAaC,EAAb,KAKA,OACE,sBAAKC,UAAU,MAAf,UACE,qBAAKA,UAAU,QAAf,SACE,uDAEF,qBAAKA,UAAU,aAAaC,QATZ,WAClBN,EAAsB,UAAVC,EAAoB,OAAS,SACzCG,EAAiB,SAATD,EAAkB,QAAU,SAOlC,SACE,oBAAGE,UAAU,4BAAb,UAA0CF,EAA1C,gBCZO,SAASI,EAAT,GAAmC,IAAjBC,EAAgB,EAAhBA,aAK/B,OACE,qBAAKH,UAAU,cAAf,SACE,yBAAQA,UAAU,cAAcI,SANf,SAACC,GACpBF,EAAaE,EAAEC,OAAOC,QAKpB,UACE,wBAAQC,cAAY,EAACD,MAAM,GAA3B,8BAGA,wBAAQA,MAAM,SAAd,oBACA,wBAAQA,MAAM,UAAd,qBACA,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,SAAd,oBACA,wBAAQA,MAAM,UAAd,0BCdO,SAASE,EAAT,GAAuC,IAAjBC,EAAgB,EAAhBA,aACnC,EAAgCb,mBAAS,IAAzC,mBAAOc,EAAP,KAAiBC,EAAjB,KAWA,OACE,qBAAKZ,UAAU,aAAf,SACE,uBAAMa,SATW,SAACR,GACpBA,EAAES,iBACFJ,EAAaC,GACbC,EAAY,IACZG,SAASC,eAAe,UAAUC,SAKFC,GAAG,SAAjC,UACE,+BACE,mBAAGlB,UAAU,mBAEf,uBACEmB,YAAY,0BACZC,KAAK,OACLhB,SAnBa,SAACC,GACpBO,EAAYP,EAAEC,OAAOC,eCFV,SAASc,EAAT,GAAqD,IAA/BX,EAA8B,EAA9BA,aAAcP,EAAgB,EAAhBA,aACjD,OACE,sBAAKH,UAAU,aAAf,UACE,8BACE,cAACS,EAAD,CAAYC,aAAcA,MAE5B,qBAAKV,UAAU,aAAf,SACE,cAACE,EAAD,CAAQC,aAAcA,S,WCRf,SAASmB,EAAT,GAAsC,IAAnBC,EAAkB,EAAlBA,QAAS3B,EAAS,EAATA,MACzC,OACE,qBAAKI,UAAU,eAAf,SACE,eAAC,IAAD,CACEwB,GAAE,mBAAcD,EAAQE,MACxBC,MACY,UAAV9B,EACI,CAAE+B,MAAO,QAASC,eAAgB,QAClC,CAAED,MAAO,QAASC,eAAgB,QAL1C,UAQE,8BACE,qBAAKC,IAAKN,EAAQO,KAAMC,IAAI,WAG9B,sBAAK/B,UAAU,UAAf,UACE,6BAAKuB,EAAQE,OACb,8BACE,2CADF,KACsBF,EAAQS,cAE9B,8BACE,uCADF,KACkBT,EAAQU,UAE1B,8BACE,wCADF,KACmBV,EAAQW,mBCxBtB,SAASC,EAAT,GAAyD,IAApCC,EAAmC,EAAnCA,UAAWC,EAAwB,EAAxBA,MAAOJ,EAAiB,EAAjBA,OAAQrC,EAAS,EAATA,MAY5D,OAXIyC,EAAMC,OAAS,IACjBF,EAAYA,EAAUG,QAAO,SAAChB,GAAD,OAC3BA,EAAQE,KAAKe,cAAcC,SAASJ,OAGpCJ,EAAOK,OAAS,IAClBF,EAAYA,EAAUG,QAAO,SAAChB,GAAD,OAC3BA,EAAQU,OAAOO,cAAcC,SAASR,OAG1CS,QAAQC,IAAIP,GAEV,qBAAKpC,UAAU,YAAf,SACGoC,EAAUQ,KAAI,SAACrB,GAAD,OACb,8BACE,cAACD,EAAD,CAASC,QAASA,EAAS3B,MAAOA,KAD1B2B,EAAQE,WCZX,SAASoB,EAAT,GAQX,IAPFT,EAOC,EAPDA,UACA1B,EAMC,EANDA,aACA2B,EAKC,EALDA,MACAlC,EAIC,EAJDA,aACA8B,EAGC,EAHDA,OACArC,EAEC,EAFDA,MACAD,EACC,EADDA,YAEA,OACE,gCACE,cAACD,EAAD,CAAKC,YAAaA,EAAaC,MAAOA,IACtC,cAACyB,EAAD,CAAYX,aAAcA,EAAcP,aAAcA,IACtD,cAACgC,EAAD,CACEC,UAAWA,EACXC,MAAOA,EACPJ,OAAQA,EACRrC,MAAOA,O,WCjBA,SAASkD,EAAT,GAAqD,IAAlCV,EAAiC,EAAjCA,UAAWzC,EAAsB,EAAtBA,YAAaC,EAAS,EAATA,MAClDmD,EAAgBC,cAAhBD,YAEAxB,EAAUa,EAAUG,QAAO,SAAChB,GAAD,OAAaA,EAAQE,OAASsB,KAC/D,OAAKxB,EAAQ,GAKX,sBAAKvB,UAAU,UAAf,UACE,cAACN,EAAD,CAAKC,YAAaA,EAAaC,MAAOA,IAEtC,sBAAKI,UAAU,UAAf,UACE,qBAAKA,UAAU,SAAf,SACE,cAAC,IAAD,CAAMwB,GAAG,IAAT,SACE,iCACE,mBAAGxB,UAAU,mBAAb,wBAIN,qBAAKA,UAAU,OAAf,SACE,qBAAK6B,IAAKN,EAAQ,GAAGO,KAAMC,IAAI,WAEjC,sBAAK/B,UAAU,aAAf,UACE,6BAAKuB,EAAQ,GAAGE,OAChB,8BACE,4CADF,IACsBF,EAAQ,GAAG0B,cAEjC,8BACE,2CADF,IACqB1B,EAAQ,GAAGS,cAEhC,8BACE,uCADF,IACiBT,EAAQ,GAAGU,UAE5B,8BACE,2CADF,IACqBV,EAAQ,GAAG2B,aAEhC,8BACE,wCADF,IACkB3B,EAAQ,GAAGW,cAG/B,sBAAKlC,UAAU,cAAf,UACE,8BACE,iDADF,IAC2BuB,EAAQ,GAAG4B,cAEtC,8BACE,2CADF,SAEG5B,EAAQ,GAAG6B,WAAWR,KAAI,SAACS,GAAD,OACzB,iCAA2BA,EAAS5B,KAApC,OAAW4B,EAAS5B,YAIxB,8BACE,0CADF,SAEGF,EAAQ,GAAG+B,UAAUV,KAAI,SAACW,GAAD,OACxB,iCAA2BA,EAAS9B,KAApC,OAAW8B,EAAS9B,eAK1B,sBAAKzB,UAAU,mBAAf,UACE,sBAAKA,UAAU,wBAAf,UACE,iDADF,OAGA,qBAAKA,UAAU,aAAf,SACGuB,EAAQ,GAAGiC,QAAQZ,KAAI,SAACrB,GAAD,OACtB,qBAAKvB,UAAU,gBAAf,SACGuB,GADiCA,iBA7DvC,cAAC,IAAD,CAAUC,GAAI,M,gBCTZiC,EAAa,CACxBC,KAAM,kBACNC,UAAW,QAGAC,EAAY,CACvBF,KAAM,gBACNC,UAAW,QAGAE,EAAeC,YAAH,8EAEH,SAACC,GAAD,OAAWA,EAAMnE,MAAM8D,QCLvCM,EAAYC,IAAOC,IAAV,2CACJ,SAACH,GAAD,OAAWA,EAAMnE,MAAM+D,aA2DnBQ,MAxDf,WACE,IACA,EAAsCtE,mBAAS,IAA/C,mBAAOuE,EAAP,KAAoBC,EAApB,KACA,EAA0BxE,mBAAS,IAAnC,mBAAOwC,EAAP,KAAciC,EAAd,KACA,EAA4BzE,mBAAS,IAArC,mBAAOoC,EAAP,KAAesC,EAAf,KACA,EAA0B1E,mBAAS,SAAnC,mBAAOD,EAAP,KAAc4E,EAAd,KACMC,EAAY,uCAAG,WAAOC,GAAP,iBAAAC,EAAA,sEACDC,MAAMF,GADL,cACbG,EADa,gBAEKA,EAAIC,OAFT,OAEb1C,EAFa,OAGnBiC,EAAejC,GAHI,2CAAH,sDAMlB2C,qBAAU,WACRN,EAZU,0CAaT,IACH,IAMM9E,EAAc,SAACqF,GACnBR,EAASQ,IAGX,OACE,eAAC,IAAD,CAAepF,MAAiB,UAAVA,EAAoB6D,EAAaG,EAAvD,UACE,cAACC,EAAD,IACA,cAACG,EAAD,CAAWhE,UAAU,MAArB,SACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOiF,OAAK,EAACC,KAAK,IAAlB,SACE,cAACrC,EAAD,CACET,UAAWgC,EACX1D,aAnBO,SAACsE,GACpBV,EAASU,IAmBG7E,aAjBO,SAAC6E,GACpBT,EAAUS,IAiBE3C,MAAOA,EACPJ,OAAQA,EACRrC,MAAOA,EACPD,YAAaA,MAGjB,cAAC,IAAD,CAAOuF,KAAK,wBAAZ,SACE,cAACpC,EAAD,CACEV,UAAWgC,EACXzE,YAAaA,EACbC,MAAOA,iBC/CRuF,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEF/E,SAASC,eAAe,SAM1BmE,M","file":"static/js/main.14b5c97c.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nexport default function Nav({ updateTheme, theme }) {\r\n  const [mode, setMode] = useState(\"Dark\");\r\n  const handleClick = () => {\r\n    updateTheme(theme === \"light\" ? \"dark\" : \"light\");\r\n    setMode(mode === \"Dark\" ? \"Light\" : \"Dark\");\r\n  };\r\n  return (\r\n    <div className=\"nav\">\r\n      <div className=\"title\">\r\n        <h3>Where in the world?</h3>\r\n      </div>\r\n      <div className=\"toggleMode\" onClick={handleClick}>\r\n        <i className=\"bi bi-brightness-low-fill\">{mode} Mode</i>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function Select({ updateRegion }) {\r\n  const handleChange = (e) => {\r\n    updateRegion(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className=\"select-form\">\r\n      <select className=\"form-select\" onChange={handleChange}>\r\n        <option defaultValue value=\"\">\r\n          Filter by region\r\n        </option>\r\n        <option value=\"africa\">Africa</option>\r\n        <option value=\"america\">America</option>\r\n        <option value=\"asia\">Asia</option>\r\n        <option value=\"europe\">Europe</option>\r\n        <option value=\"oceania\">Oceania</option>\r\n      </select>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { useState } from \"react\";\r\n\r\nexport default function InputField({ updateSearch }) {\r\n  const [inputVal, setInputVal] = useState(\"\");\r\n  const handleChange = (e) => {\r\n    setInputVal(e.target.value);\r\n  };\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    updateSearch(inputVal);\r\n    setInputVal(\"\");\r\n    document.getElementById(\"formId\").reset();\r\n  };\r\n\r\n  return (\r\n    <div className=\"inputfield\">\r\n      <form onSubmit={handleSubmit} id=\"formId\">\r\n        <span>\r\n          <i className=\"bi bi-search\"></i>\r\n        </span>\r\n        <input\r\n          placeholder=\"Search for a country...\"\r\n          type=\"text\"\r\n          onChange={handleChange}\r\n        />\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Select from \"./Select\";\r\nimport InputField from \"./InputField\";\r\n\r\nexport default function PageInputs({ updateSearch, updateRegion }) {\r\n  return (\r\n    <div className=\"PageInputs\">\r\n      <div>\r\n        <InputField updateSearch={updateSearch} />\r\n      </div>\r\n      <div className=\"select-tag\">\r\n        <Select updateRegion={updateRegion} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\nexport default function Country({ country, theme }) {\r\n  return (\r\n    <div className=\"country-card\">\r\n      <Link\r\n        to={`/details/${country.name}`}\r\n        style={\r\n          theme === \"light\"\r\n            ? { color: \"black\", textDecoration: \"none\" }\r\n            : { color: \"white\", textDecoration: \"none\" }\r\n        }\r\n      >\r\n        <div>\r\n          <img src={country.flag} alt=\"flag\" />\r\n        </div>\r\n\r\n        <div className=\"caption\">\r\n          <h3>{country.name}</h3>\r\n          <p>\r\n            <b>Population</b>: {country.population}\r\n          </p>\r\n          <p>\r\n            <b>Region</b>: {country.region}\r\n          </p>\r\n          <p>\r\n            <b>Capital</b>: {country.capital}\r\n          </p>\r\n        </div>\r\n      </Link>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Country from \"./Country\";\r\n\r\nexport default function Countries({ countries, query, region, theme }) {\r\n  if (query.length > 0) {\r\n    countries = countries.filter((country) =>\r\n      country.name.toLowerCase().includes(query)\r\n    );\r\n  }\r\n  if (region.length > 0) {\r\n    countries = countries.filter((country) =>\r\n      country.region.toLowerCase().includes(region)\r\n    );\r\n  }\r\n  console.log(countries);\r\n  return (\r\n    <div className=\"countries\">\r\n      {countries.map((country) => (\r\n        <div key={country.name}>\r\n          <Country country={country} theme={theme} />\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Nav from \"./Nav\";\r\nimport PageInputs from \"./PageInputs\";\r\n\r\nimport Countries from \"./Countries\";\r\n\r\nexport default function Home({\r\n  countries,\r\n  updateSearch,\r\n  query,\r\n  updateRegion,\r\n  region,\r\n  theme,\r\n  updateTheme,\r\n}) {\r\n  return (\r\n    <div>\r\n      <Nav updateTheme={updateTheme} theme={theme} />\r\n      <PageInputs updateSearch={updateSearch} updateRegion={updateRegion} />\r\n      <Countries\r\n        countries={countries}\r\n        query={query}\r\n        region={region}\r\n        theme={theme}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport Nav from \"../Home/Nav\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\nexport default function Details({ countries, updateTheme, theme }) {\r\n  let { countryName } = useParams();\r\n\r\n  const country = countries.filter((country) => country.name === countryName);\r\n  if (!country[0]) {\r\n    return <Redirect to={\"/\"} />;\r\n  }\r\n  //console.log(country);\r\n  return (\r\n    <div className=\"details\">\r\n      <Nav updateTheme={updateTheme} theme={theme} />\r\n\r\n      <div className=\"wrapper\">\r\n        <div className=\"button\">\r\n          <Link to=\"/\">\r\n            <button>\r\n              <i className=\"bi bi-arrow-left\">Back</i>\r\n            </button>\r\n          </Link>\r\n        </div>\r\n        <div className=\"flag\">\r\n          <img src={country[0].flag} alt=\"flag\" />\r\n        </div>\r\n        <div className=\"name-n-cap\">\r\n          <h3>{country[0].name}</h3>\r\n          <p>\r\n            <b>Native name</b>:{country[0].nativeName}\r\n          </p>\r\n          <p>\r\n            <b>Population</b>:{country[0].population}\r\n          </p>\r\n          <p>\r\n            <b>Region</b>:{country[0].region}\r\n          </p>\r\n          <p>\r\n            <b>Sub Region</b>:{country[0].subregion}\r\n          </p>\r\n          <p>\r\n            <b>Capital</b>:{country[0].capital}\r\n          </p>\r\n        </div>\r\n        <div className=\"curr-n-code\">\r\n          <p>\r\n            <b>Top Level Domain</b>:{country[0].alpha2Code}\r\n          </p>\r\n          <p>\r\n            <b>Currencies</b>: &nbsp;\r\n            {country[0].currencies.map((currency) => (\r\n              <span key={currency.name}>{currency.name}, </span>\r\n            ))}\r\n          </p>\r\n\r\n          <p>\r\n            <b>Languages</b>: &nbsp;\r\n            {country[0].languages.map((language) => (\r\n              <span key={language.name}>{language.name}, </span>\r\n            ))}\r\n          </p>\r\n        </div>\r\n\r\n        <div className=\"border-countries\">\r\n          <div className=\"border-countries-head\">\r\n            <b>Border Countries</b>:\r\n          </div>\r\n          <div className=\"bordersCon\">\r\n            {country[0].borders.map((country) => (\r\n              <div className=\"borderCountry\" key={country}>\r\n                {country}\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import { createGlobalStyle } from \"styled-components\";\r\n\r\nexport const lightTheme = {\r\n  body: \"hsl(0, 0%, 98%)\",\r\n  fontColor: \"#000\",\r\n};\r\n\r\nexport const darkTheme = {\r\n  body: \"RGB(23,23,22)\",\r\n  fontColor: \"#fff\",\r\n};\r\n\r\nexport const GlobalStyles = createGlobalStyle`\r\n\tbody {\r\n\t\tbackground-color: ${(props) => props.theme.body};\r\n    }\r\n   \r\n`;\r\n","import \"./App.css\";\nimport React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport Home from \"./Home/Home\";\nimport Details from \"./Details/Details\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport styled, { ThemeProvider } from \"styled-components\";\nimport { lightTheme, darkTheme, GlobalStyles } from \"./themes.js\";\n\nconst StyledApp = styled.div`\n  color: ${(props) => props.theme.fontColor};\n`;\n\nfunction App() {\n  const API = \"https://restcountries.eu/rest/v2/all\";\n  const [countryList, setCountryList] = useState([]);\n  const [query, setQuery] = useState(\"\");\n  const [region, setRegion] = useState(\"\");\n  const [theme, setTheme] = useState(\"light\");\n  const getCountries = async (endpoint) => {\n    const res = await fetch(endpoint);\n    const countries = await res.json();\n    setCountryList(countries);\n  };\n\n  useEffect(() => {\n    getCountries(API);\n  }, []);\n  const updateSearch = (str) => {\n    setQuery(str);\n  };\n  const updateRegion = (str) => {\n    setRegion(str);\n  };\n  const updateTheme = (str) => {\n    setTheme(str);\n  };\n\n  return (\n    <ThemeProvider theme={theme === \"light\" ? lightTheme : darkTheme}>\n      <GlobalStyles />\n      <StyledApp className=\"App\">\n        <Router>\n          <Switch>\n            <Route exact path=\"/\">\n              <Home\n                countries={countryList}\n                updateSearch={updateSearch}\n                updateRegion={updateRegion}\n                query={query}\n                region={region}\n                theme={theme}\n                updateTheme={updateTheme}\n              />\n            </Route>\n            <Route path=\"/details/:countryName\">\n              <Details\n                countries={countryList}\n                updateTheme={updateTheme}\n                theme={theme}\n              />\n            </Route>\n          </Switch>\n        </Router>\n      </StyledApp>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}